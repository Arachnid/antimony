# Neil Gershenfeld 1/24/15

import fab

title('scale xy z')

def scale_xy_z(part,x0,y0,z0,z1,s0,s1):
   from fab.types import Shape, Transform
   dz = z1-z0
   # X' = x0 + (X-x0)*dz/(s1*(Z-z0)+s0*(z1-Z))
   # Y' = y0 + (Y-y0)*dz/(s1*(Z-z0)+s0*(z1-Z))
   # X = x0 + (X'-x0)*(s1*(Z-z0)+s0*(z1-Z))/dz
   # Y = y0 + (Y'-y0)*(s1*(Z-z0)+s0*(z1-Z))/dz
   return part.map(Transform(
      '+f%(x0)g/*-Xf%(x0)gf%(dz)g+*f%(s1)g-Zf%(z0)g*f%(s0)g-f%(z1)gZ' % locals(),
      '+f%(y0)g/*-Yf%(y0)gf%(dz)g+*f%(s1)g-Zf%(z0)g*f%(s0)g-f%(z1)gZ' % locals(),
      'Z',
      '+f%(x0)g/*-Xf%(x0)g+*f%(s1)g-Zf%(z0)g*f%(s0)g-f%(z1)gZf%(dz)g' % locals(),
      '+f%(y0)g/*-Yf%(y0)g+*f%(s1)g-Zf%(z0)g*f%(s0)g-f%(z1)gZf%(dz)g' % locals(),
      'Z'))

input('x0',float,0)
input('y0',float,0)
input('z0',float,-1)
input('z1',float,1)
input('s0',float,2)
input('s1',float,.5)

input('shape',fab.types.Shape)
output('transform',scale_xy_z(shape,x0,y0,z0,z1,s0,s1))


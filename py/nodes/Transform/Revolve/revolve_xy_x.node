# Neil Gershenfeld 2/1/15

import fab

title('revolve xy x')

def revolve_xy_x(part,y0):
   from fab.types import Shape,Transform
   # X' = X
   # Z' = Z
   # X = X'
   # Z = Z'
   if (part.bounds.ymax >= y0):
      # Y' = y0+sqrt((Y-y0)^2+Z^2)
      # Y = y0+sqrt((Y'-y0)^2-Z^2)
      d = part.bounds.ymax-y0
      ymin = y0-d
      ymax = y0+d
      zmin = -d
      zmax = d
      xmin = part.bounds.xmin
      xmax = part.bounds.xmax
      p = part.map(Transform(
         'X',
         '+f%(y0)gr+q-Yf%(y0)gqZ' % locals(),
         'Z',
         'X',
         '+f%(y0)gr-q-Yf%(y0)gqZ' % locals(),
         'Z'))
      return Shape(p.math,xmin,ymin,zmin,xmax,ymax,zmax)
   else:
      # Y' = y0-sqrt((Y-y0)^2+Z^2)
      # Y = y0-sqrt((Y'-y0)^2-Z^2)
      d = y0-part.bounds.ymin
      ymin = y0-d
      ymax = y0+d
      zmin = -d
      zmax = d
      xmin = part.bounds.xmin
      xmax = part.bounds.xmax
      p = part.map(Transform(
         'X',
         '-f%(y0)gr+q-Yf%(y0)gqZ' % locals(),
         'Z',
         'X',
         '-f%(y0)gr-q-Yf%(y0)gqZ' % locals(),
         'Z'))
      return Shape(p.math,xmin,ymin,zmin,xmax,ymax,zmax)

input('y0',float,0)

input('shape',fab.types.Shape)
output('transform',revolve_xy_x(shape,y0))


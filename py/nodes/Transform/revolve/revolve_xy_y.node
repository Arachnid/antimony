# Neil Gershenfeld 2/1/15

import fab

title('revolve xy y')

def revolve_xy_y(part,x0):
   from fab.types import Shape,Transform
   # Y' = Y
   # Z' = Z
   # Y = Y'
   # Z = Z'
   if (part.bounds.xmin >= x0):
      # X' = x0+sqrt((X-x0)^2+Z^2)
      # X = x0+sqrt((X'-x0)^2-Z^2)
      d = part.bounds.xmax-x0
      xmin = x0-d
      xmax = x0+d
      zmin = -d
      zmax = d
      ymin = part.bounds.ymin
      ymax = part.bounds.ymax
      p = part.map(Transform(
         '+f%(x0)gr+q-Xf%(x0)gqZ' % locals(),
         'Y',
         'Z',
         '+f%(x0)gr-q-Xf%(x0)gqZ' % locals(),
         'Y',
         'Z'))
      return Shape(p.math,xmin,ymin,zmin,xmax,ymax,zmax)
   else:
      # X' = x0-sqrt((X-x0)^2+Z^2)
      # X = x0-sqrt((X'-x0)^2-Z^2)
      d = x0-part.bounds.xmin
      xmin = x0-d
      xmax = x0+d
      zmin = -d
      zmax = d
      ymin = part.bounds.ymin
      ymax = part.bounds.ymax
      p = part.map(Transform(
         '-f%(x0)gr+q-Xf%(x0)gqZ' % locals(),
         'Y',
         'Z',
         '-f%(x0)gr-q-Xf%(x0)gqZ' % locals(),
         'Y',
         'Z'))
      return Shape(p.math,xmin,ymin,zmin,xmax,ymax,zmax)

input('x0',float,0)

input('shape',fab.types.Shape)
output('transform',revolve_xy_y(shape,x0))


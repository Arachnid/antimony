# Neil Gershenfeld 1/24/15

import fab

title('reflect xz')

def reflect_xz(part,x0,z0):
   from fab.types import Shape, Transform
   # X' = x0 + (Z-z0)
   # Z' = z0 + (X-x0)
   # X = x0 + (Z'-z0)
   # Z = z0 + (X'-x0)
   return part.map(Transform(
      '+f%(x0)g-Zf%(z0)g' % locals(),
      'Y',
      '+f%(z0)g-Xf%(x0)g' % locals(),
      '+f%(x0)g-Zf%(z0)g' % locals(),
      'Y',
      '+f%(z0)g-Xf%(x0)g' % locals()))

input('x0',float,0)
input('z0',float,0)

input('shape',fab.types.Shape)
output('transform',reflect_xz(shape,x0,z0))

